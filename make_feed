#!/bin/sh
# Barebones Atom feed generator for news items.
# Extracts the first line beginning with hashes as the entry title.

set -e

LNG=${LNG:-en}

METAFILE="${LNG}/META.atom"
case $LNG in
	en) HOMEPAGE="http://alleg.sourceforge.net/" ;;
	*)  HOMEPAGE="http://alleg.sourceforge.net/${LNG}/" ;;
esac

rfc3339_date () {
	date --rfc-3339=seconds "$@"
}

# Reverse any series of filenames containing dates.
revdatesort () {
    local acc=
    local x

    for x in "$@"
    do
        case "$x" in
            *[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]*)
                acc="$x $acc"
                ;;
            *)
                echo "$acc"
                acc=
                echo "$x"
                ;;
        esac
    done
    echo "$acc"
}

emit_top () {
	cat <<- EOF
	<?xml version="1.0" encoding="utf-8"?>
	<feed xmlns="http://www.w3.org/2005/Atom">
		<title>Allegro news</title>
		<link href="$HOMEPAGE"/>
		<updated>$( rfc3339_date )</updated>
		<id>urn:uuid:661257c2-82a0-4510-b2be-0f6b010807b9</id>
	EOF
}

emit_entry () {
	# Had some trouble with "local var=..." and dash so separate them.
	local file
	local uuid
	local date
	file=$1
	uuid=$( grep "^$file uuid=" $METAFILE | cut -d= -f2- )
	date=$( grep "^$file date=" $METAFILE | cut -d= -f2- )

	if test -z "$uuid"
	then
		uuid="$( uuidgen )"
		date=$( rfc3339_date -r $file )
		echo "$file uuid=$uuid" >> $METAFILE
		echo "$file date=$date" >> $METAFILE
	fi

	title=$( grep '^#\+ ' $file | head -n 1 )
	title=${title#* }

	cat <<- EOF
	<entry>
		<title>$title</title>
		<link href="$HOMEPAGE"/>
		<id>urn:uuid:$uuid</id>
		<updated>$date</updated>
	</entry>
	EOF
}

emit_bottom () {
	cat <<- EOF
	</feed>
	EOF
}

>> $METAFILE

emit_top
for file in $( revdatesort "$@" )
do
	emit_entry $file
done
emit_bottom

# The <<- syntax strips tabs, so use tabs instead of spaces.
# vim: set ts=8 sts=8 sw=8 noet:
