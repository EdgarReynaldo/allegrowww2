#!/bin/sh
set -e

export LC_COLLATE=C

TOP=$(pwd)
PANDOC=${PANDOC:-pandoc}
KEEP_TEMPS=${KEEP_TEMPS:-n}
STYLESHEET=web_style.css

check_for_pandoc () {
    if ! which "$PANDOC" >/dev/null 2>&1
    then
        # Make things a little easier on SF.net servers.
        export PATH="$PATH:/home/groups/a/al/alleg/pandoc/bin"
        if ! which "$PANDOC" >/dev/null 2>&1
        then
            echo "$PANDOC not found in PATH"
            exit 1
        fi
    fi
}

template () {
    local page="$1"

    catnl inc.a.*
    if test -d "$page"
    then
        catnl $( revdatesort $page/* )
    else
        catnl "$page"
    fi
    catnl inc.z.*
}

catnl () {
    local x

    for x in "$@"
    do
        cat "$x"
        echo
    done
}

# Reverse any series of filenames containing dates.
revdatesort () {
    local acc=
    local x

    for x in "$@"
    do
        case "$x" in
            *[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]*)
                acc="$x $acc"
                ;;
            *)
                echo "$acc"
                acc=
                echo "$x"
                ;;
        esac
    done
    echo "$acc"
}

get_title () {
    grep -e "^$1=" "$TOP/en/META.title" | cut -d '=' -f 2-
}

# main
#-------

if test $# -ne 2
then
    echo "usage: $0 <input file> <output directory>"
    exit 1
fi

check_for_pandoc

indir="$( dirname $1 )"
inpage="$( basename $1 )"
outdir="$( readlink -m $2 )"
outpage="${outdir}/${inpage}.html"

# Sanity check that don't overwrite an input file by passing wrong args.
case "$outpage" in
    */OUT/*)
        ;;
    *)
        echo "Refusing to write to ${outpage}."
        exit 2
        ;;
esac

test -d "$outdir" || mkdir "$outdir"

cd "$indir"

tmp=",,tmp.$inpage"
template "$inpage" > "$tmp"
title="$( get_title $inpage )"
"$PANDOC" "$tmp" -T "$title" -c "$STYLESHEET" --standalone -o "$outpage"

case "$KEEP_TEMPS" in
    n*)
        rm -f "$tmp"
        ;;
esac

# vim: ft=sh sts=4 sw=4 et:
